import shutil


rule all:
    input:
        "all_viridian.202409.trees.tsz"

rule clean:
    shell:
        """
        rm -f tree.all_viridian.202409.jsonl.gz \
              tree.all_viridian.202409.pb.gz \
              mutations.tsv \
              viridian.topology.trees \
              viridian.mutations.trees \
              viridian.dated_samples.trees \
              viridian.dated_nodes.trees \
              all_viridian.202409.trees \
              all_viridian.202409.trees.tsz
        """

rule download_json:
    output:
        "tree.all_viridian.202409.jsonl.gz"
    shell:
        """
        wget --quiet --content-disposition \
            https://figshare.com/ndownloader/files/49691040 \
            -O {output}
        """

rule download_pb:
    output:
        "tree.all_viridian.202409.pb.gz"
    shell:
        """
        wget --quiet --content-disposition \
            https://figshare.com/ndownloader/files/49691037 \
            -O {output}
        """

# Determine whether to run the rule that creates "mutations.tsv" locally or in a Docker container.
if shutil.which("matUtils"):
    ruleorder: export_mutations_local > export_mutations_docker
else:
    ruleorder: export_mutations_docker > export_mutations_local


rule export_mutations_local:
    conda:
        "usher.yml"
    input:
        "tree.all_viridian.202409.pb.gz"
    output:
        "mutations.tsv"
    shell:
        # Got GTF from 
        # http://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/bigZips/genes/ncbiGenes.gtf.gz
        """
        matUtils summary -i tree.all_viridian.202409.pb.gz \
            -f reference.fasta -g ncbiGenes.gtf \
            --translate mutations.tsv
        """

rule export_mutations_docker:
    input:
        "tree.all_viridian.202409.pb.gz"
    output:
        "mutations.tsv"
    shell:
        # Got GTF from 
        # http://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/bigZips/genes/ncbiGenes.gtf.gz
        """
        echo "Using Docker container for matUtils"
        if ! docker run --rm -v $(pwd):/data -w /data pathogengenomics/usher:latest \
            matUtils summary -i tree.all_viridian.202409.pb.gz \
            -f reference.fasta -g ncbiGenes.gtf \
            --translate mutations.tsv; then
            echo "ERROR: Docker command failed. Please check that:" >&2
            echo "  1. Docker is installed and running" >&2
            echo "  2. The pathogengenomics/usher:latest image is available (see https://usher-wiki.readthedocs.io/en/latest/Installation.html#docker)" >&2
            echo "  3. Input files (tree.all_viridian.202409.pb.gz, reference.fasta, ncbiGenes.gtf) exist" >&2
            exit 1
        fi
        """

rule convert_topology:
    conda:
        "convert.yml"
    input:
        "tree.all_viridian.202409.jsonl.gz"
    output:
        "viridian.topology.trees"
    shell:
        "python ../src/mat2tsk.py convert-topology {input} {output}"

rule add_mutations:
    conda:
        "convert.yml"
    input:
        "viridian.topology.trees",
        "mutations.tsv"
    output:
        "viridian.mutations.trees"
    shell:
        """
        python ../src/mat2tsk.py convert-mutations {input} reference.fasta {output}
        """

rule date_samples:
    conda:
        "convert.yml"
    input:
        "viridian.mutations.trees",
    output:
        "viridian.dated_samples.trees"
    shell:
        """
        python ../src/mat2tsk.py date-samples {input} {output}
        """

rule date_internal_nodes:
    input:
        "viridian.dated_samples.trees"
    output:
        "viridian.dated_nodes.trees"
    shell:
        """
        echo "NOTE: tsdate can take many minutes per EP iteration: this may be a while."
        python ../src/mat2tsk.py date-internal {input} {output}
        """

rule minimise_metadata:
    conda:
        "convert.yml"
    input:
        "viridian.dated_nodes.trees",
    output:
        "all_viridian.202409.trees"
    shell:
        """
        python -m sc2ts minimise-metadata {input} {output} --pango-field=Viridian_pangolin_1.29
        """

rule tszip:
    conda:
        "convert.yml"
    input:
        "all_viridian.202409.trees"
    output:
        "all_viridian.202409.trees.tsz"
    shell:
        """
        python -m tszip -k {input} -c > {output}
        """

