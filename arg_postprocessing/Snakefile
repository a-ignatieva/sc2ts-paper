
rule all:
    input:
        "sc2ts_v1_2023-02-21_md-0.01_bps_dated.trees.tsz"

INFERENCE_DIR="../inference/results/"

# Add exact matches to the dataset and do some minor mutation
# rearrangements like pushing unary recombinant mutations.
rule postprocess:
    input:
        "../inference/results/v1-beta1/v1-beta1_{DATE}.ts"
    output:
        "sc2ts_v1_{DATE}.trees"
    shell:
        """
        python -m sc2ts postprocess {input} {output} \
            --match-db=../inference/results/v1-beta1.matches.db
        """

# Map the deletions from the alignments back into the trees,
# considering only deletions above given frequency threshold.
rule map_deletions:
    input:
        "../data/viridian_mafft_2024-10-14_v1.vcz.zip",
        "{PREFIX}.trees"
    output:
        "{PREFIX}_md-{DEL_FREQ}.trees"
    shell:
        """
        python -m sc2ts map-deletions {input} {output} \
            --frequency-threshold={wildcards.DEL_FREQ}
        """

rule shift_breakpoints:
    input:
        "{PREFIX}.trees"
    output:
        "{PREFIX}_bps.trees"
    shell:
        """
        python ../scripts/run_breakpoint_shift_for_deletions.py {input} {output}
        """

rule date:
    input:
        "{PREFIX}.trees"
    output:
        "{PREFIX}_dated.trees"
    shell:
        """
        python ../scripts/run_nonsample_dating.py {input} {output}
        """

# TODO add the rule to run pango on all the nodes.

ruleorder: date > shift_breakpoints > map_deletions

rule tszip:
    input:
        "{PREFIX}.trees"
    output:
        "{PREFIX}.trees.tsz"
    shell:
        """
        python -m tszip -k {input} 
        """


